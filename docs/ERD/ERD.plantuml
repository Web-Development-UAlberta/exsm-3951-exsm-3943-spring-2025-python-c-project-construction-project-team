@startuml

skinparam linetype ortho
skinparam nodesep 100
skinparam ranksep 100
top to bottom direction

entity "Renovation Type" as RenovationType {
  +name : string <<PK>>
  +description : text
}


package "Identity" <<frame>> {
    entity "User" as User {
    *id : int <<PK>>
    *authentication_oid : guid
    *created_timestamp : datetime
    *name : string
    *email : string
    *role: string <<FK>>
    +phone_number : string
    +address : string
    }

    entity "Role" as UserRole {
    *name : string <<PK>>
    +description : text
    }

    User ||--|| UserRole
}

package "Request For Quote" <<frame>> {
    entity "Request For Quote" as RFQ {
    -- Metadata --
    *id : int <<PK>>
    *created_timestamp : datetime
    -- Application Set --
    *client_Id : int <<FK>>
    *status : string <<FK>>
    +assigned_employee_id: int <<FK>>
    -- RFQ Form Set --
    +preferred_material : text
    +description : text
    +renovation_type : string <<FK>>
    +budget : decimal
    +project_address : string
    +room_size : enum
    }

    entity "RFQ Image" as RFQImage {
    *id : int <<PK>>
    *uploaded_timestamp : datetime
    *image_uri : string
    *rfq_id : int <<FK>>
    }

    entity "RFQ Status" as RFQStatus {
    *status : string <<PK>>
    }

    User ||--|{ RFQ
    RenovationType }|--|| RFQ
    RFQ ||--o{ RFQImage
    RFQStatus ||--|| RFQ
} 

package "Project" <<frame>> {
    entity "Project" as Project {
    -- Metadata --
    *id : int <<PK>> 
    *created_timestamp : datetime
    *created_by_employee : int <<FK>>
    -- Application Set --
    *client_Id : int <<FK>>
    *status : string <<FK>>
    *is_public : boolean
    *quote_price_override : decimal
    *quote_schedule_start_override : datetime
    *quote_schedule_end_override : datetime
    }

    entity "Client Invoice" as ClientInvoice {
        *id : int <<PK>>
        *created_timestamp : datetime
        *project_id : int <<FK>>
        *description : text
        *payment_instructions : text
        *amount : decimal
        *paid : boolean
    }

    entity "Project Comment" as ProjectComment {
        *id : int <<PK>>
        *comment : text
        *created_timestamp : datetime
        *project_id : int <<FK>>
        *created_by_employee : int <<FK>>
    }
    entity "Project Status" as ProjectStatus {
        *status : string <<PK>>
        +description : text
    }
    package "Project Services" <<frame>> {
        entity "Project Service Type" as ProjectServiceType {
            +name : string <<PK>>
            +description : text
        }
        entity "Project Service" as ProjectService {
            -- Metadata --
            +id : int <<PK>>
            +status : enum
            +project_id : int <<FK>>
            -- General --
            +name : string
            +description : text
            +service_type : string <<FK>>
            +supplier_id : int <<FK>>
            -- Quoting --
            +price_quote : decimal
            +cost_quote : decimal
            +start_date_quote : datetime
            +end_date_quote : datetime
            -- Scheduling --
            +actual_start_date : datetime
            +actual_end_date : datetime
        }
        entity "Supplier" as Supplier {
            -- Metadata --
            +id : int <<PK>>
            -- General --
            +service_type : string <<FK>>
            +name_business : string
            +name_salesman : string
            +email : string
            +phone_number : string
            +address : string
            
        }

        entity "Project Service Invoice" as ProjectServiceInvoice {
            +id : int <<PK>>
            +created_timestamp : datetime
            +service_id : int <<FK>>
            +amount : decimal
            +paid : boolean
        }

        ProjectService ||--o{ ProjectServiceInvoice        
        ProjectService ||--|| ProjectServiceType
        ProjectService }o--|| Supplier
        Supplier ||--|{ ProjectServiceType

    }

    entity "Project Task" as ProjectTask {
        *id : int <<PK>>
        *created_timestamp : datetime
        *project_id : int <<FK>>
        *assigned_user_id : int <<FK>>
        +title : string
        +description : text
        +status : string
    }
    
    entity "Project Communication" as ProjectCommunication {
        *id : int <<PK>>
        *created_timestamp : datetime
        *communication_timestamp : datetime
        *communication_method : string
        *project_id : int <<FK>>
        +from_userId : int <<FK>>
        +to_userId : int <<FK>>
        +title : string
        +description : text
    }

    entity "Project File" as ProjectFile {
        *id : int <<PK>>
        *uploaded_timestamp : datetime
        *file_uri : string
        *file_name : string
        *project_id : int <<FK>>
        *type : enum
    }

    Project ||--o{ ProjectCommunication
    ProjectCommunication }o--o{ User
    Project ||--o{ ProjectTask
    ProjectTask |o--|| User
    Project||--o{ ProjectFile
    User ||--o{ Project
    Project ||--|| RFQ
    ProjectService }o--|| Project
    Project ||--o{ RenovationType
    ProjectStatus ||--|| Project
    ProjectComment }o--|| Project
    ProjectComment }o--|| User
    ClientInvoice }o--|| Project
    
}














@enduml
